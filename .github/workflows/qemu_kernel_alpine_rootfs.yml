name: Build and Release

on:
  push:

jobs:
  build_dumb_init:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y musl-tools

      - name: Build dumb-init
        run: |
          echo "Building dumb init"
          musl-gcc -O2 abuild/qemu-kernel-build/src/dumb-init/dumb-init.c -o abuild/qemu-kernel-build/src/dumb-init/dumb-init
          strip --strip-all abuild/qemu-kernel-build/src/dumb-init/dumb-init

      - name: Upload kernel artifact
        uses: actions/upload-artifact@v4
        with:
          name: dumb-init
          path: abuild/qemu-kernel-build/src/dumb-init/dumb-init

  build_kernel:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y gcc make build-essential libelf-dev perl dkms

      - name: Download kernel source
        run: |
          echo "Downloading kernel source"
          curl -O https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-6.6.58.tar.xz
          tar xvf linux-6.6.58.tar.xz -C /tmp/
          cp abuild/qemu-kernel-build/src/qemu-kernel-config /tmp/linux-6.6.58/.config

      - name: Build kernel
        run: |
          echo "Building kernel"
          cd /tmp/linux-6.6.58
          ls -la
          make -j8
          ls -la arch/x86/boot/bzImage

      - name: Upload kernel artifact
        uses: actions/upload-artifact@v4
        with:
          name: bzImage
          path: /tmp/linux-6.6.58/arch/x86/boot/bzImage

  build_alpine_rootfs:
    runs-on: ubuntu-latest
    needs: [build_dumb_init]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download alpine rootfs
        run: |
          echo "Downloading alpine rootfs"
          curl -O https://dl-cdn.alpinelinux.org/alpine/latest-stable/releases/x86_64/alpine-minirootfs-3.20.3-x86_64.tar.gz
          mkdir -pv /tmp/alpine-rootfs
          tar xvf alpine-minirootfs-3.20.3-x86_64.tar.gz -C /tmp/alpine-rootfs

      - name: download dumb-init
        uses: actions/download-artifact@v4
        with:
          name: dumb-init
          path: /tmp/alpine-rootfs

      - name: Prepare rootfs
        run: |
          # chmod +x /tmp/alpine-rootfs/init
          chmod +x /tmp/alpine-rootfs/dumb-init
          cd /tmp/alpine-rootfs
          find . | cpio -o -H newc > /tmp/alpine-rootfs.cpio

      - name: Upload alpine rootfs artifact
        uses: actions/upload-artifact@v4
        with:
          name: alpine-rootfs.cpio
          path: /tmp/alpine-rootfs.cpio

  qemu_alpine_base:
    runs-on: ubuntu-latest
    needs: [build_kernel, build_alpine_rootfs]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: merge artifacts
        run: mkdir -pv /tmp/alpine_base

      - name: Download kernel artifact
        uses: actions/download-artifact@v4
        with:
          name: bzImage

      - name: copy kernel artifact
        run: cp bzImage /tmp/alpine_base/bzImage

      - name: Download alpine rootfs artifact
        uses: actions/download-artifact@v4
        with:
          name: alpine-rootfs.cpio

      - name: copy alpine rootfs artifact
        run: cp alpine-rootfs.cpio /tmp/alpine_base/alpine-rootfs.cpio

      - name: add launch script for qemu-system-x86_64
        run: |
          echo "qemu-system-x86_64 -kernel ./bzImage -initrd ./alpine-rootfs.cpio -nographic -append 'console=ttyS0'" > alpine_base/launch.sh
          chmod +x /tmp/alpine_base/launch.sh

      - name: Upload alpine base artifact
        uses: actions/upload-artifact@v4
        with:
          path: /tmp/alpine_base
